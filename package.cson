
# NPM package file, see https://docs.npmjs.com/files/package.json
# Oh, this is CSON, not JSON ( see CoffeeScript-Object-Notation https://github.com/bevry/cson )

#####################################################################
#####################################################################

# Master source file used to generate package.json

# DEFAULT METHOD (if package.json is intact):
# npm run cson2json
#
# ALTERNATIVE METHOD (if package.json is corrupted):
# npm install cson
# node readium-js/readium-shared-js/readium-cfi-js/node_modules/cson/bin/cson2json package.cson > package.json
# Note that on some Windows terminals (e.g. GitShell),
# unfortunately the package.json file might need its encoding
# converted to UTF-no-BOM :(
# This is somehow due to the piped stdout-stdin result being UCS2-little-endian
# (yet this works just fine when the same command is invoked from
# "npm run cson2json" instead of from Node!)

#####################################################################
#####################################################################

'/*': '----------------------------------------------------------------------------'
'..': 'This package.json (JSON) is automatically generated from package.cson (CSON)'
'.-': "DO NOT invoke 'npm init' or 'npm install --save' ('--save-dev' / '--save-optional')"
'._': 'as this would overwrite / update the JSON, not the master CSON!'
'*/': '----------------------------------------------------------------------------'

#####################################################################

name: "readium-js-viewer"

version: "0.20.0-alpha"

description: "Readium web app - online cloud reader, offline Chrome extension/app"

keywords: [
    "readium"
    "epub"
    "epub3"
]

author:
    name: "Readium (Daniel Weck)"
    email: "daniel.weck@gmail.com"
    url: "http://github.com/readium"

license: "BSD-3-Clause"

licenses: [
    type: "BSD-3-Clause"
    url: "http://opensource.org/licenses/BSD-3-Clause"
]

homepage: "http://github.com/readium/readium-js-viewer"

bugs:
    url: "http://github.com/readium/readium-js-viewer/issues"
    email: "daniel.weck@gmail.com"

repository:
    type: "git"
    url: "git://github.com/readium/readium-js-viewer.git"

#####################################################################
files: [

    "build-output/"

    "dev/"

    "dist/"

    "license.txt"

    "README.md"
]

# "main" is designed for Node/CommonJS modules, not RequireJS/AMD ones.
# See http://requirejs.org/docs/commonjs.html
# See http://requirejs.org/docs/node.html
#
#main: "build-output/_multiple-bundles/readium-js-viewer.js"

#####################################################################
dependencies:

    "parallelshell": 'latest'

    "opener": 'latest'

    #"http-server": 'latest'
    "http-server": 'danielweck/http-server'
    # SEE: https://github.com/indexzero/http-server/issues/154


#####################################################################
# These dependencies can be fetched by using the "--dev" option
# in "npm install --dev readium-js-viewer".
devDependencies:

# see readium-js:
# "crypto-js", "zipjs", "requirejs-text"

# see readium-cfi-js:
# "requirejs", "almond", "jquery"

    #"keymaster": 'latest'
    "keymaster": 'danielweck/keymaster'

    #"jath": 'latest'
    "jath": 'danielweck/jath'
    # "libxmljs" node-gyp python < v3 :(
    #"jquery-xpath": 'latest'


    "bootstrap": 'latest'

    "bootstrap-accessibility-plugin": 'latest'

    "hammerjs": 'latest'

    "jquery-hammerjs": 'latest'

    "screenfull": 'latest'

    "JSON2": 'latest'

    "hogan": 'latest'

    "requirejs-hogan-plugin": 'latest'

    "remotestoragejs": 'latest'

    "spin.js": 'latest'

# Below dependencies are only used in build tasks (above are runtime deps):

# see readium-cfi-js:
# "cson", "jshint", "glob", "rimraf", "mkdirp", "watch", "live-reload"

    # see readium-build-tools (in readium-cfi-js)
    # versionsMaker.js
    "gift": 'latest'

    "clean-css": 'latest'
    "uglify-js": 'latest'

    #"nodeunit": 'latest'
    "mocha": 'latest'

    "wd": 'latest'

    "phantomjs": 'latest'

    #"grunt": 'latest'
    "grunt-selenium-webdriver": 'latest'
    #"selenium-webdriver": 'latest'

    "crx": 'latest'

    "chai": 'latest'
    "chai-as-promised": 'latest'

    "github": 'latest'

    "hogan.js": 'latest'

    "httpreq": 'latest'

    "xml2js": 'latest'

    "decompress-zip": 'latest'

    #"unzip": 'latest'

#####################################################################
scripts:

#=====================
    cson2json: '

        node ./readium-js/readium-shared-js/readium-cfi-js/node_modules/cson/bin/cson2json package.cson > package.json
        &&
        node readium-js/readium-shared-js/readium-cfi-js/readium-build-tools/optimizePackageJsonScripts.js
    '

#=====================
    'prepare': '

        npm run
            prepare:submodule
        &&
        npm run
            prepare:dependencies
    '

#=====================
    'prepare:dependencies': '

        npm install
        &&
        npm update
        &&
        node readium-js/readium-shared-js/readium-cfi-js/readium-build-tools/gitHubForksUpdater.js
    '

#=====================
    'prepare:submodule': '

        cd readium-js
        &&
        npm run prepare
        &&
        cd ..
        &&
        ls
    '

#=====================
    clean: '

        node --version
        &&
        npm --version
        &&
        npm run rimraf
            build-output/*
        &&
        npm run rimraf
            dist
    '

#=====================
    'prebuild': '

        npm run clean
    '

#=====================
    build: '

        npm run
            build:scripts
    '
# build:styles
# may be needed in a future version of Readium that uses SASS (or other) instead of pure CSS

#=====================
    lint: '

        npm run jshint
            js/**.js
    '


#=====================
    'preversioning': '

        npm run mkdirp
            build-output
    '

#=====================
    'versioning': '

        node build-config/versioning.js build-output/version.json
    '

#=====================
    'prebuild:scripts:multiple': '

        npm run mkdirp
            build-output/XXX
        &&
        npm run ncp
            src/templates/
            build-output/XXX/templates/
        &&
        npm run ncp
            src/i18n/
            build-output/XXX/i18n/
        &&
        npm run cpy
            build-output/version.json
            build-output/XXX/
    '

#=====================
    'postbuild:scripts:multiple': '

        npm run rimraf
            build-output/XXX
        &&
        npm run rimraf
            build-output/_multiple-bundles/version.json
        &&
        npm run rimraf
            build-output/_multiple-bundles/templates
        &&
        npm run rimraf
            build-output/_multiple-bundles/i18n
        &&
        npm run rimraf
            build-output/_multiple-bundles/migration
        &&
        npm run rimraf
            build-output/_multiple-bundles/storage
        &&
        npm run rimraf
            build-output/_multiple-bundles/versioning
        &&
        npm run rimraf
            build-output/_multiple-bundles/workers
        &&
        npm run rimraf
            build-output/_multiple-bundles/mathjax


        &&
        npm run cpy
            build-output/_multiple-bundles/z-worker.js
            build-output/
        &&
        npm run cpy
            build-output/_multiple-bundles/deflate.js
            build-output/
        &&
        npm run cpy
            build-output/_multiple-bundles/inflate.js
            build-output/
        &&
        npm run rimraf
            build-output/_multiple-bundles/deflate.js
        &&
        npm run rimraf
            build-output/_multiple-bundles/inflate.js
        &&
        npm run rimraf
            build-output/_multiple-bundles/z-worker.js


        &&
        npm run cpy
            build-output/_multiple-bundles/z-worker.js.map
            build-output/
        &&
        npm run cpy
            build-output/_multiple-bundles/deflate.js.map
            build-output/
        &&
        npm run cpy
            build-output/_multiple-bundles/inflate.js.map
            build-output/
        &&
        npm run rimraf
            build-output/_multiple-bundles/deflate.js.map
        &&
        npm run rimraf
            build-output/_multiple-bundles/inflate.js.map
        &&
        npm run rimraf
            build-output/_multiple-bundles/z-worker.js.map


        &&
        npm run rimraf
            build-output/_multiple-bundles/RequireJS.js.src.js
        &&
        npm run rimraf
            build-output/_multiple-bundles/inflate.js.src.js
        &&
        npm run rimraf
            build-output/_multiple-bundles/deflate.js.src.js
        &&
        npm run rimraf
            build-output/_multiple-bundles/z-worker.js.src.js
    '

#=====================
    'build:scripts': '

        npm run versioning
        &&
        npm run
            build:scripts:multiple
        &&
        npm run
            build:scripts:single
        &&
        npm run
            build:scripts:single:LITE
        &&
        npm run
            build:scripts:single:CHROMEAPP
        &&
        npm run
            build:scripts:single:CHROMEAPPWORKER
    '

#=====================
    'build:scripts:multiple': '

        npm run rjs
             --rjs_bundle=multiple
    '

#=====================
    'build:scripts:single': '

        npm run rjs
             --rjs_bundle=single
    '

#=====================
    'build:scripts:single:LITE': '

        npm run rjs
             --rjs_bundle=single
             --rjs_configCustomTarget=_LITE
    '

#=====================
    'build:scripts:single:CHROMEAPP': '

        npm run rjs
             --rjs_bundle=single
             --rjs_configCustomTarget=_CHROMEAPP
    '

#=====================
    'build:scripts:single:CHROMEAPPWORKER': '

        npm run rjs
             --rjs_bundle=single
             --rjs_configOverrideTarget=_CHROMEAPP-WORKER
    '

#=====================
    'predist': '

        npm run build
        &&
        npm run mkdirp
            dist
    '

#=====================
    'dist': '

        npm run dist:copy
        &&
        npm run dist:cloudReaderLite
        &&
        npm run dist:cloudReader
        &&
        npm run dist:chromeApp
    '

#=====================
    'dist:copy': '

        npm run mkdirp
            dist/zip_sourcemap
        &&
        npm run cpy
            build-output/z-worker.js.map
            dist/zip_sourcemap
        &&
        npm run cpy
            build-output/deflate.js.map
            dist/zip_sourcemap
        &&
        npm run cpy
            build-output/inflate.js.map
            dist/zip_sourcemap
    '

#=====================
    'predist:cloudReader': '

        npm run rimraf
            dist/cloud-reader
        &&
        npm run rimraf
            dist/cloud-reader_sourcemap
    '

#=====================
    'dist:cloudReader': '

        npm run dist:cloudReader:copy
        &&
        npm run dist:cloudReader:css
        &&
        npm run dist:cloudReader:js
    '

#=====================
    'dist:cloudReader:copy': '

        npm run mkdirp
            dist/cloud-reader/scripts/zip
        &&
        npm run cpy
            src/cloud-reader/index.html
            dist/cloud-reader/
        &&
        npm run cpy
            build-output/z-worker.js
            dist/cloud-reader/scripts/zip
        &&
        npm run cpy
            build-output/deflate.js
            dist/cloud-reader/scripts/zip
        &&
        npm run cpy
            build-output/inflate.js
            dist/cloud-reader/scripts/zip
        &&
        npm run ncp
            src/images/
            dist/cloud-reader/images/
        &&
        npm run ncp
            src/js/mathjax/
            dist/cloud-reader/scripts/mathjax/
        &&
        npm run ncp
            node_modules/bootstrap/fonts/
            dist/cloud-reader/fonts/
        &&
        npm run cpy
            src/css/annotations.css
            dist/cloud-reader/css/
    '

#=====================
    'dist:cssoptimize': '

        node node_modules/clean-css/bin/cleancss
            --skip-rebase
            --skip-advanced
            --skip-aggressive-merging
            --skip-media-merging
            --skip-restructuring
            --skip-shorthand-compacting
            node_modules/bootstrap/dist/css/bootstrap.css
            node_modules/bootstrap-accessibility-plugin/plugins/css/bootstrap-accessibility.css
            src/css/sourcesanspro.css
            src/css/readium_js.css
            src/css/viewer.css
            src/css/viewer_audio.css
            src/css/settings.css
    '

#=====================
    'dist:cloudReader:css': '

        npm run dist:cssoptimize
            -o dist/cloud-reader/css/readium-all.css
            src/css/library.css
    '

#=====================
    'dist:cloudReader:js': '

        npm run mkdirp
            dist/cloud-reader_sourcemap
        &&
        npm run cpy
            build-output/_single-bundle/readium-js-viewer_all.js
            dist/cloud-reader/scripts/
        &&
        npm run cpy
            build-output/_single-bundle/readium-js-viewer_all.js.map
            dist/cloud-reader_sourcemap/
    '

#node node_modules/uglify-js/bin/uglifyjs
#    --compress
#    --mangle
#    --screw-ie8
#    --source-map
#    dist/cloud-reader_sourcemap/readium-js-viewer_all-min.js.map
#    --source-map-url
#    readium-js-viewer_all-min.js.map
#    --xxxxsource-map-root
#    readium-js-viewer_all-min.js
#    -o
#    dist/cloud-reader/scripts/readium-js-viewer_all-min.js
#    --in-source-map
#    build-output/_single-bundle/readium-js-viewer_all.js.map
#    --
#    build-output/_single-bundle/readium-js-viewer_all.js

#=====================
    'predist:cloudReaderLite': '

        npm run rimraf
            dist/cloud-reader-lite
        &&
        npm run rimraf
            dist/cloud-reader-lite_sourcemap
    '

#=====================
    'dist:cloudReaderLite': '

        npm run dist:cloudReaderLite:copy
        &&
        npm run dist:cloudReaderLite:css
        &&
        npm run dist:cloudReaderLite:js
    '

#=====================
    'dist:cloudReaderLite:copy': '

        npm run mkdirp
            dist/cloud-reader-lite/scripts/zip
        &&
        npm run cpy
            src/cloud-reader-lite/index.html
            dist/cloud-reader-lite/
        &&
        npm run cpy
            build-output/z-worker.js
            dist/cloud-reader-lite/scripts/zip
        &&
        npm run cpy
            build-output/deflate.js
            dist/cloud-reader-lite/scripts/zip
        &&
        npm run cpy
            build-output/inflate.js
            dist/cloud-reader-lite/scripts/zip
        &&
        npm run ncp
            src/images/
            dist/cloud-reader-lite/images/
        &&
        npm run ncp
            src/js/mathjax/
            dist/cloud-reader-lite/scripts/mathjax/
        &&
        npm run ncp
            node_modules/bootstrap/fonts/
            dist/cloud-reader-lite/fonts/
        &&
        npm run cpy
            src/css/annotations.css
            dist/cloud-reader-lite/css/
    '

#=====================
    'dist:cloudReaderLite:css': '

        npm run dist:cssoptimize
            -o dist/cloud-reader-lite/css/readium-all.css
    '

#=====================
    'dist:cloudReaderLite:js': '

        npm run mkdirp
            dist/cloud-reader-lite_sourcemap

        &&
        npm run cpy
            build-output/_single-bundle/readium-js-viewer_all_LITE.js
            dist/cloud-reader-lite/scripts/
        &&
        npm run cpy
            build-output/_single-bundle/readium-js-viewer_all_LITE.js.map
            dist/cloud-reader-lite_sourcemap/
    '

#node node_modules/uglify-js/bin/uglifyjs
#--compress
#--mangle
#--screw-ie8
#--source-map
#dist/cloud-reader-lite_sourcemap/readium-js-viewer_all_LITE-min.js.map
#--source-map-url
#readium-js-viewer_all_LITE-min.js.map
#--xxxxsource-map-root
#readium-js-viewer_all_LITE-min.js
#-o
#dist/cloud-reader-lite/scripts/readium-js-viewer_all_LITE-min.js
#--in-source-map
#build-output/_single-bundle/readium-js-viewer_all_LITE.js.map
#--
#build-output/_single-bundle/readium-js-viewer_all_LITE.js

#=====================
    'predist:chromeApp': '

        npm run rimraf
            dist/chrome-app
        &&
        npm run rimraf
            dist/chrome-app_sourcemap
    '

#=====================
    'dist:chromeApp': '

        npm run dist:chromeApp:copy
        &&
        node build-config/updateChromeManifest.js
        &&
        npm run dist:chromeApp:css
        &&
        npm run dist:chromeApp:js
    '

#=====================
    'dist:chromeApp:copy': '

        npm run mkdirp
            dist/chrome-app/scripts/zip
        &&
        npm run cpy
            src/chrome-app/index.html
            dist/chrome-app/
        &&
        npm run cpy
            build-output/z-worker.js
            dist/chrome-app/scripts/zip
        &&
        npm run cpy
            build-output/deflate.js
            dist/chrome-app/scripts/zip
        &&
        npm run cpy
            build-output/inflate.js
            dist/chrome-app/scripts/zip
        &&
        npm run ncp
            src/images/
            dist/chrome-app/images/
        &&
        npm run ncp
            src/js/mathjax/
            dist/chrome-app/scripts/mathjax/
        &&
        npm run ncp
            node_modules/bootstrap/fonts/
            dist/chrome-app/fonts/
        &&
        npm run cpy
            src/css/annotations.css
            dist/chrome-app/css/
        &&
        npm run cpy
            src/chrome-app/epubReadingSystem.js
            dist/chrome-app/scripts/
        &&
        npm run cpy
            src/chrome-app/background.js
            dist/chrome-app/scripts/
        &&
        npm run cpy
            src/chrome-app/requirejs-config.js
            dist/chrome-app/scripts/
        &&
        npm run ncp
            src/chrome-app/icons/
            dist/chrome-app/icons/
        &&
        npm run ncp
            src/i18n/_locales/
            dist/chrome-app/_locales/
        &&
        npm run cpy
            src/chrome-app/manifest.json
            dist/chrome-app/
    '

#=====================
    'dist:chromeApp:css': '

        npm run cpy
            dist/cloud-reader/css/readium-all.css
            dist/chrome-app/css/
    '

#=====================
    'dist:chromeApp:js': '

        npm run mkdirp
            dist/chrome-app_sourcemap
        &&
        npm run cpy
            build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js
            dist/chrome-app/scripts/
        &&
        npm run cpy
            build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js.map
            dist/chrome-app_sourcemap/
        &&
        npm run cpy
            build-output/_single-bundle/readium-js-viewer_CHROMEAPP-WORKER.js
            dist/chrome-app/scripts/
        &&
        npm run cpy
            build-output/_single-bundle/readium-js-viewer_CHROMEAPP-WORKER.js.map
            dist/chrome-app_sourcemap/
    '

#        node node_modules/uglify-js/bin/uglifyjs
#            --compress
#            --mangle
#            --screw-ie8
#            --source-map
#            dist/chrome-app_sourcemap/readium-js-viewer_all_CHROMEAPP-min.js.map
#            --source-map-url
#            readium-js-viewer_all_CHROMEAPP-min.js.map
#            --xxxxsource-map-root
#            readium-js-viewer_all_CHROMEAPP-min.js
#            -o
#            dist/chrome-app/scripts/readium-js-viewer_all_CHROMEAPP-min.js
#            --in-source-map
#            build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js.map
#            --
#            build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js

#=====================
#### BLOCKING! (CTRL-C) [watch][live-reload][http]
    'http:watch': '

        echo > open_webbrowser.js
        &&
        parallelshell
            \"npm run watcher\"
            \"npm run http:ebooks\"
            \"npm run http:app\"
    '
#    \"npm run live-reload\"

#=====================
#### BLOCKING! (CTRL-C) [http]
    'http': '

        parallelshell
            \"npm run http:ebooks\"
            \"npm run webBrowser\"
            \"npm run http:app\"
    '

#=====================
#### BLOCKING! (CTRL-C) [watch or nodemon]
    'watcher': '

        npm run watch
            \"npm run build
                && node readium-js/readium-shared-js/readium-cfi-js/readium-build-tools/webbrowser.js
                && npm run webBrowser
                && npm run rimraf
                    open_webbrowser.js\"
            dev/ src/ readium-js/js/ readium-shared-js/js/ readium-shared-js/plugins/ readium-shared-js/readium-cfi-js/js/
    '
    #    nodemon -q
    #    -w build-output/
    #    --ext \".\"
    #    --exec \"npm run build
    #            && node readium-js/readium-shared-js/readium-cfi-js/readium-build-tools/webbrowser.js
    #            && npm run webbrowser
    #            && npm run rimraf
    #                  open_webbrowser.js\"

#=====================
    'http:app': '

        node
            readium-js/readium-shared-js/readium-cfi-js/readium-build-tools/http-server.js
            -p 9090

            -c-1
            ./
    '

#=====================
    'http:ebooks': '

        node
            node_modules/http-server/bin/http-server
            -a 127.0.0.1
            -p 8080

            -c-1
            --cors
            ./epub_content
    '

#=====================
    'http:cloudReaderDist': '

        node
            node_modules/http-server/bin/http-server
            -a 127.0.0.1
            -p 8080

            -c-1
            ./dist/cloud-reader
    '

#=====================
#    'live-reload': '
#
#        live-reload --port 9091 --delay 1000 build-output/
#    '

#=====================
    'webBrowser': '

        node node_modules/opener/opener.js
            http://127.0.0.1:8080/
    '


#=====================
    'clean:tests': '

        npm run rimraf
            dist/Readium.crx
        &&
        npm run rimraf
            dist/cloud-reader/epub_content/
        &&
        npm run rimraf
            dist/testbooks.zip
        &&
        npm run rimraf
            dist/testlibrary/
    '


#=====================
#    'precrx': '
#
#        npm run dist
#    '

#=====================
    'crx': '

        node node_modules/crx/bin/crx
            pack
            dist/chrome-app/
            --output dist/Readium.crx
            --private-key tests/test.pem
    '

#=====================
    'dist:cloudReader:copy:epub_content': '

        npm run ncp
            epub_content/
            dist/cloud-reader/epub_content/
    '

#=====================
    'dist:cloudReader:copy:epub_testsuite': '

        node build-config/createTestLibrary.js
    '

#=====================
    'dist:cloudReader:copy:sourcemap': '

        npm run ncp
            dist/cloud-reader_sourcemap/
            dist/cloud-reader/scripts/
        &&
        npm run ncp
            dist/zip_sourcemap/
            dist/cloud-reader/scripts/zip/
    '

#=====================
    'dist:chromeApp:copy:sourcemap': '

        npm run ncp
            dist/chrome-app_sourcemap/
            dist/chrome-app/scripts/
        &&
        npm run ncp
            dist/zip_sourcemap/
            dist/chrome-app/scripts/zip/
    '


#=====================
    'pretest:travis': '

        npm run dist
        &&
        npm run dist:chromeApp:copy:sourcemap
        &&
        npm run crx
        &&
        npm run dist:cloudReader:copy:sourcemap
        &&
        npm run dist:cloudReader:copy:epub_content
        &&
        npm run dist:cloudReader:copy:epub_testsuite
    '

#=====================
    'test:travis': '

        parallelshell
            \"npm run http:cloudReaderDist\"
            \"npm run mocha\"
    '

#=====================
    'pretest:sauce': '

        npm run crx
    '

#=====================
    'test:sauce': '

        npm run mocha --readium-js-viewer:USE_SAUCE=true --readium-js-viewer:MODE=chromeApp
    '

#=====================
    'pretest:chromeApp': '

        npm run crx
    '

# REQUIRES ChromeDriver in the PATH
# https://sites.google.com/a/chromium.org/chromedriver/home
#=====================
    'test:chromeApp': '

        parallelshell
            \"node build-config/selenium_webdriver.js
            -a 127.0.0.1
            -p 8080
            -c-1
            ./dist/chrome-app\"
            \"npm run mocha --readium-js-viewer:MODE=chromeApp\"
    '

#=====================
    'pretest:chrome': '

        npm run dist:cloudReader:copy:epub_content
    '

# REQUIRES ChromeDriver in the PATH
# https://sites.google.com/a/chromium.org/chromedriver/home
#=====================
    'test:chrome': '

        parallelshell
            \"node build-config/selenium_webdriver.js
            -a 127.0.0.1
            -p 8080
            -c-1
            ./dist/cloud-reader\"
            \"npm run mocha --readium-js-viewer:MODE=chrome\"
    '

#==============
    'pretest:firefox': '

        npm run dist:cloudReader:copy:epub_content
    '

#=====================
    'test:firefox': '

        parallelshell
            \"node build-config/selenium_webdriver.js
            -a 127.0.0.1
            -p 8080
            -c-1
            ./dist/cloud-reader\"
            \"npm run mocha --readium-js-viewer:MODE=firefox\"
    '

#=====================
    'mocha': '

        node node_modules/mocha/bin/mocha
    	      --timeout 180000
    	      --ui bdd
            tests/tests.js
    '
